---
AWSTemplateFormatVersion: 2010-09-09
Description: Pululapp Auth Service.
Parameters:
  PululappEnv:
    Type: String
    Default: staging
    AllowedValues:
      - staging
      - prod
    Description: Pululapp enviroment
  ServiceImageVersion:
    Type: String
    Description: Service image
  ServiceName:
    Type: String
    Description: Service name
    Default: auth-svc
  ServiceDescription:
    Type: String
    Description: Service description
    Default: Transform a valid token into proper user headers on request
  ECROutput:
    Type: String
    Description: Service ECR cloudformation output
    Default: auth-ecr-uri
  AuthHeader:
    Type: String
    Description: Auth header
    Default: X-Auth
Mappings:
  ServiceConfig:
    staging:
      RAM: 128
      TimeOut: 60
      AuthTTL: 0 #3600 # TODO -> make it short once we are carefull about tokens TTL
    prod:
      RAM: 128
      TimeOut: 60
      AuthTTL: 0 #3600 # TODO -> make it short once we are carefull about tokens TTL

Resources:
  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      MaxSessionDuration: 3600
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayFullAccess
      Policies:
        - PolicyName: !Sub ${ServiceName}-dynamodb-${PululappEnv}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:GetResourcePolicy
                  - dynamodb:ListStreams
                  - dynamodb:GetRecords
                Resource:
                  - Fn::Sub:
                    - "${TABLE_ARN}/index/*"
                    - TABLE_ARN: 
                        Fn::ImportValue:
                          !Sub ${PululappEnv}-users-table-arn

  AuthLambda:
    Type: AWS::Lambda::Function
    Properties:
      Architectures: 
        - arm64
      Code: 
        ImageUri: 
          Fn::Sub:
            - "${ECR_URI}:${VERSION}"
            - VERSION: !Ref ServiceImageVersion
              ECR_URI: 
                Fn::ImportValue:
                  !Ref ECROutput
      Description: !Ref ServiceDescription
      Environment:
        Variables:
          UsersTable: 
            Fn::ImportValue:
              !Sub ${PululappEnv}-users-table-id
          UsersIndexTable: 
            Fn::ImportValue:
              !Sub ${PululappEnv}-users-id
          jwtKey:
            Fn::Sub:
            - "{{resolve:ssm:${SSM_OUTPUT_NAME}}}"
            - SSM_OUTPUT_NAME: 
                Fn::ImportValue:
                  !Sub ${PululappEnv}-jwt-key
      FunctionName: !Sub ${ServiceName}-${PululappEnv}
      # ImageConfig: 
      #   ImageConfig
      # LoggingConfig: 
      #   ApplicationLogLevel: INFO
      #   LogFormat: JSON
      #   SystemLogLevel: DEBUG
      MemorySize: !FindInMap ['ServiceConfig', !Ref PululappEnv, 'RAM']
      PackageType: Image
      Role: !GetAtt ServiceRole.Arn
      Tags: 
        - Key: App
          Value: Pululapp
        - Key: Env
          Value: !Ref PululappEnv
        - Key: Service
          Value: !Ref ServiceName
      Timeout: !FindInMap ['ServiceConfig', !Ref PululappEnv, 'TimeOut']
      TracingConfig: 
        Mode: Active

  LambdaApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AuthLambda
      Principal: apigateway.amazonaws.com

  DefaultAuthorizer:
    Type: AWS::ApiGatewayV2::Authorizer
    Properties:
      ApiId: 
        Fn::ImportValue: 
          !Sub ${PululappEnv}-central-gateway-id
      AuthorizerPayloadFormatVersion: "2.0"
      AuthorizerResultTtlInSeconds: !FindInMap ['ServiceConfig', !Ref PululappEnv, 'AuthTTL']
      AuthorizerType: REQUEST
      AuthorizerUri:  !Sub  arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AuthLambda}/invocations
      EnableSimpleResponses: False
      IdentitySource: 
        - !Sub "$request.header.${AuthHeader}"
      Name: !Sub default-${PululappEnv}

Outputs:
  AuthorizerID:
    Value: !Ref DefaultAuthorizer
    Export:
      Name: !Sub ${PululappEnv}-auth-default-id
