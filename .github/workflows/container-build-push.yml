---
name: 'Docker build and push'

on:
  workflow_call:
    inputs:
      docker-tag:
        description: 'Docker tag for the image'
        required: false
        type: string
      docker-image-name:
        description: 'Docker image name.'
        required: true
        type: string
      docker-context:
        description: "Path to the dockerfile"
        required: true
        type: string
      docker-build-args:
        description: "Docker build args"
        required: false
        type: string
      environment:
        description: 'Environment to run tests against'
        type: string
        default: general
        required: false
      pkgs-location:
        description: 'Folder for pkgs to move locally'
        type: string
        default: "./services/pkgs"
        required: false
    secrets:
      DOCKERHUB_USERNAME: 
        required: true
      DOCKERHUB_TOKEN:
        required: true

defaults:
  run:
    shell: bash

jobs:
  Docker-build-push:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Where am i
        run: cd ${{ inputs.docker-context }} && ls -la

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
        # Setting up repository credentials for pushing immages 
      - name: Logging to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Pkgs coping
        run: mkdir -p ${{ inputs.docker-context }}/tmp && cp -r ${{ inputs.pkgs-location }} ${{ inputs.docker-context }}/tmp  

      - name: Pkgs content
        run: cd ${{ inputs.docker-context }}/tmp/pkgs && ls -la
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.docker-context }} 
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.docker-image-name }}:${{ inputs.docker-tag }}
          build-args: ${{ inputs.docker-build-args }}
 
